name: Build and Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          # Excluir combinaciones problemáticas o innecesarias
          - os: macos-latest
            python: "3.7"  # Por ejemplo, si macOS no soporta bien Python 3.7

    steps:
      - uses: actions/checkout@v4  # Actualizado de v3 a v4

      - uses: actions/setup-python@v5  # Actualizado de v4 a v5
        with:
          python-version: ${{ matrix.python }}
          
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        
      # Compilación en Linux usando contenedor manylinux
      - name: Build wheels - Linux
        if: runner.os == 'Linux'
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --strip
          manylinux: 2014
          container: on
          
      # Compilación en Windows y macOS
      - name: Build wheels - Windows & macOS
        if: runner.os != 'Linux'
        uses: PyO3/maturin-action@v1
        with:
          args: --release --strip
          
      # Subir los artifacts
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python }}
          path: target/wheels/*.whl
          
  publish:
    name: Publish to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    
    steps:
      # Descargar todos los wheels generados
      - uses: actions/download-artifact@v4
        with:
          path: dist/
          
      # Mover los wheels a un directorio único
      - name: Move wheels to dist directory
        run: |
          mkdir -p dist-final
          find dist -type f -name "*.whl" -exec cp {} dist-final/ \;
          
      # Mostrar los archivos a publicar para diagnóstico
      - name: Display wheels to be published
        run: ls -la dist-final/
          
      # Publicar en PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist-final/
          skip-existing: true
          verbose: true